<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2024.2.4">
  <Settings>
    <Param val="use prefs" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="use prefs" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'results/%s_subj%s_order%s_%s' % (expName, expInfo['subj'], expInfo['sess_type'], expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="Thank you for your patience." valType="str" updates="None" name="End Message"/>
    <Param val="{'subj': '', 'sess_type': 'A or B or C or D'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="False" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1280, 800]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="float" valType="str" updates="None" name="clockFormat"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="warning" valType="code" updates="None" name="consoleLoggingLevel"/>
    <Param val="default" valType="str" updates="None" name="ecSampleRate"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="asymmetry_v13" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="60" valType="code" updates="None" name="frameRate"/>
    <Param val="measuring" valType="str" updates="None" name="frameRateMsg"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="PsychToolbox" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="True" valType="bool" updates="None" name="measureFrameRate"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="1" valType="code" updates="None" name="runMode"/>
    <Param val="False" valType="bool" updates="None" name="rush"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="new_block">
      <RoutineSettingsComponent name="new_block" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="new_block" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="block_start_code" plugin="None">
        <Param val="import random, numpy as np" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="import * as random from 'random';&amp;#10;import * as np from 'numpy';&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="block_outcome, block_bonus, disp_blockN = 0, 0, 0&amp;#10;sess_type_file = f'input_data/sess_type{expInfo[&quot;sess_type&quot;]}.csv'" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="[block_outcome, block_bonus, disp_blockN] = [0, 0, 0];&amp;#10;sess_type_file = `input_data/sess_type${expInfo[&quot;sess_type&quot;]}.csv`;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="[block_outcome, block_bonus] = [0, 0];&amp;#10;disp_blockN += 1;&amp;#10;block_start_txt = `Press up arrow to begin block ${disp_blockN}`;&amp;#10;trial_rows = function () {&amp;#10;    var _pj_a = [], _pj_b = util.range(40);&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var i = _pj_b[_pj_c];&amp;#10;        _pj_a.push((i + ((blockN - 1) * 40)));&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="block_outcome, block_bonus = 0, 0&amp;#10;disp_blockN += 1&amp;#10;block_start_txt = f'Press up arrow to begin block {disp_blockN}'&amp;#10;&amp;#10;trial_rows = [i + (blockN-1) * 40 for i in range(40)]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="block_start_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="block_start_text" plugin="None">
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="block_start_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$block_start_txt" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="block_start_resp" plugin="None">
        <Param val="'up'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="block_start_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="baseline">
      <RoutineSettingsComponent name="baseline" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="1" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="baseline" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <StaticComponent name="ISI1" plugin="None">
        <Param val="" valType="code" updates="None" name="code"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="1" valType="code" updates="None" name="durationEstim"/>
        <Param val="ISI1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="time (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$base_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
      </StaticComponent>
      <CodeComponent name="jitter_base" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="base_dur = 0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="base_dur = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="base_dur = (1 + np.random.choice(np.arange((- 0.15), 0.16, 0.05)));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="base_dur = 1 + np.random.choice(np.arange(-.15, 0.16, 0.05))&amp;#10;#print('base frames: ')" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="#print(frameN, end=', ')" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="jitter_base" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="stim">
      <RoutineSettingsComponent name="stim" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="1" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="stim" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="target_stim" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$target_file" valType="file" updates="set during: baseline.ISI1" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="target_stim" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val=".6,.6" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="delay">
      <RoutineSettingsComponent name="delay" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="1.5" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="delay" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <StaticComponent name="ISI2" plugin="None">
        <Param val="" valType="code" updates="None" name="code"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="1.5" valType="code" updates="None" name="durationEstim"/>
        <Param val="ISI2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$delay_dur" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
      </StaticComponent>
      <CodeComponent name="debug_delay" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="delay_dur = (1.5 + np.random.choice(np.arange((- 0.15), 0.16, 0.05)));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="delay_dur = 1.5 + np.random.choice(np.arange(-.15, 0.16, 0.05))&amp;#10;#print('delay frames: ')" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="#print(frameN, end=', ')" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="debug_delay" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="task">
      <RoutineSettingsComponent name="task" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="task" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="rand_divider_slider" plugin="None">
        <Param val="from psychopy.hardware import keyboard&amp;#10;kb = keyboard.Keyboard()" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="import {keyboard} from 'psychopy/hardware';&amp;#10;kb = new keyboard.Keyboard();&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="leftPressed, rightPressed, slider_moved = .0, .0, .0&amp;#10;positions = []&amp;#10;response_move = .005&amp;#10;debug_task_txt = ''" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="[leftPressed, rightPressed, slider_moved] = [0.0, 0.0, 0.0];&amp;#10;positions = [];&amp;#10;response_move = 0.005;&amp;#10;debug_task_txt = &quot;&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="[leftPressed, rightPressed, slider_moved] = [0.0, 0.0, 0.0];&amp;#10;positions = [];&amp;#10;debug_task_txt = `Trial ${(trial_key + 1)}`;&amp;#10;kb.clearEvents();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="leftPressed, rightPressed, slider_moved = .0, .0, .0&amp;#10;positions = []&amp;#10;debug_task_txt = f'Trial {trial_key+1}'&amp;#10;&amp;#10;kb.clearEvents()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="debug_task.text = trial_key&amp;#10;&amp;#10;# for some reason psychopy doesnt remember this assignment&amp;#10;if slider.markerPos == None:&amp;#10;    slider.markerPos = anchor&amp;#10;&amp;#10;# FYI, by default press &amp; release are false, only temporarily true&amp;#10;if kb.getKeys(['left'], waitRelease=True, clear=True):&amp;#10;# released&amp;#10;    leftPressed = 0&amp;#10;if leftPressed or kb.getKeys(['left'], waitRelease=False, clear=False):&amp;#10;# pressed&amp;#10;    leftPressed, slider_moved = 1, 1&amp;#10;    if (-.4 + .01) &lt;= slider.markerPos:&amp;#10;        slider.markerPos -= response_move&amp;#10;&amp;#10;if kb.getKeys(['right'], waitRelease=True, clear=True):&amp;#10;# released&amp;#10;    rightPressed = 0&amp;#10;if rightPressed or kb.getKeys(['right'], waitRelease=False, clear=False):&amp;#10;# pressed&amp;#10;    rightPressed, slider_moved = 1, 1&amp;#10;    if slider.markerPos &lt;= (.4 - .01):&amp;#10;        slider.markerPos += response_move   &amp;#10;&amp;#10;&amp;#10;positions.append(slider.markerPos)&amp;#10;&amp;#10;# check psychopy_notes for link" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="debug_task.text = trial_key;&amp;#10;if ((slider.markerPos === null)) {&amp;#10;    slider.markerPos = anchor;&amp;#10;}&amp;#10;if (kb.getKeys([&quot;left&quot;], {&quot;waitRelease&quot;: true, &quot;clear&quot;: true})) {&amp;#10;    leftPressed = 0;&amp;#10;}&amp;#10;if ((leftPressed || kb.getKeys([&quot;left&quot;], {&quot;waitRelease&quot;: false, &quot;clear&quot;: false}))) {&amp;#10;    [leftPressed, slider_moved] = [1, 1];&amp;#10;    if ((((- 0.4) + 0.01) &lt;= slider.markerPos)) {&amp;#10;        slider.markerPos -= response_move;&amp;#10;    }&amp;#10;}&amp;#10;if (kb.getKeys([&quot;right&quot;], {&quot;waitRelease&quot;: true, &quot;clear&quot;: true})) {&amp;#10;    rightPressed = 0;&amp;#10;}&amp;#10;if ((rightPressed || kb.getKeys([&quot;right&quot;], {&quot;waitRelease&quot;: false, &quot;clear&quot;: false}))) {&amp;#10;    [rightPressed, slider_moved] = [1, 1];&amp;#10;    if ((slider.markerPos &lt;= (0.4 - 0.01))) {&amp;#10;        slider.markerPos += response_move;&amp;#10;    }&amp;#10;}&amp;#10;positions.push(slider.markerPos);&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;positions&quot;, positions);&amp;#10;kb.clearEvents();&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData('positions', positions)&amp;#10;kb.clearEvents()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="rand_divider_slider" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="img1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$img1_file" valType="file" updates="set during: delay.ISI2" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="img1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="-.6, 0" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val=".45,.45" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="img2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$img2_file" valType="file" updates="set during: delay.ISI2" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="img2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val=".6, 0" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val=".45,.45" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <PolygonComponent name="divider_line" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="5" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="divider_line" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="90" valType="num" updates="constant" name="ori"/>
        <Param val="$div_pos, 0" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="line" valType="str" updates="None" name="shape"/>
        <Param val=".2,0" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="slider_line" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="5" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="slider_line" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0, 0" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="line" valType="str" updates="None" name="shape"/>
        <Param val=".8,.0" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <SliderComponent name="slider" plugin="None">
        <Param val="" valType="color" updates="constant" name="borderColor"/>
        <Param val="" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="1.0000, -.5000, 1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val=".001" valType="num" updates="constant" name="granularity"/>
        <Param val="" valType="code" updates="None" name="initVal"/>
        <Param val="" valType="list" updates="constant" name="labels"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="slider" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0,0" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val=".8,.05" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="('labels45',)" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="slider" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(-.4,-.3,-.2,-.1,.0,.1,.2,.3,.4)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </SliderComponent>
      <KeyboardComponent name="slider_resp" plugin="None">
        <Param val="'left','right'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="slider_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="all keys" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <KeyboardComponent name="submit_resp" plugin="None">
        <Param val="'up'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="submit_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="debug_task" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="0" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="debug_task" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0,-.2" valType="list" updates="set every frame" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="feedback">
      <RoutineSettingsComponent name="feedback" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="feedback" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="fb_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="correct, outcome = .0, .0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="[correct, outcome] = [0.0, 0.0];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;valence = ((stimVal === &quot;subj_C0F1_val&quot;) ? subj_C0F1_val : subj_C1F0_val);&amp;#10;no_resp_txt = &quot;&quot;;&amp;#10;[coinLR, coinM, crossLR, crossM] = [0, 0, 0, 0];&amp;#10;[correct, outcome] = [0, 0];&amp;#10;if (((slider_moved &amp;&amp; (! (submit_resp.keys === null))) &amp;&amp; _pj.in_es6(&quot;up&quot;, submit_resp.keys))) {&amp;#10;    if ((((slider.markerPos &gt;= div_pos) &amp;&amp; (target_pos &gt;= div_pos)) || ((slider.markerPos &lt;= div_pos) &amp;&amp; (target_pos &lt;= div_pos)))) {&amp;#10;        correct = 1;&amp;#10;        outcome = ((valence === &quot;rew&quot;) ? 2 : 1);&amp;#10;        if ((outcome === 2)) {&amp;#10;            coinLR = 1;&amp;#10;        } else {&amp;#10;            if ((outcome === 1)) {&amp;#10;                coinM = 1;&amp;#10;            }&amp;#10;        }&amp;#10;    } else {&amp;#10;        correct = 0;&amp;#10;        outcome = ((valence === &quot;rew&quot;) ? (- 1) : (- 2));&amp;#10;        if ((outcome === (- 2))) {&amp;#10;            [coinLR, crossLR] = [1, 1];&amp;#10;        } else {&amp;#10;            if ((outcome === (- 1))) {&amp;#10;                [coinM, crossM] = [1, 1];&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    block_outcome += outcome;&amp;#10;    bonus = (1 - Math.pow((target_pos - slider.markerPos), 2));&amp;#10;    if (correct) {&amp;#10;        block_bonus += bonus;&amp;#10;    }&amp;#10;} else {&amp;#10;    if ((! slider_moved)) {&amp;#10;        no_resp_txt = &quot;You must move the slider!&quot;;&amp;#10;    } else {&amp;#10;        no_resp_txt = &quot;Respond faster!&quot;;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# C0F1 = Curve penalty, Flat reward&amp;#10;# stimVal comes from file which depends on experimenter input&amp;#10;valence = subj_C0F1_val if stimVal == 'subj_C0F1_val' else subj_C1F0_val&amp;#10;    &amp;#10;no_resp_txt = ''&amp;#10;coinLR, coinM, crossLR, crossM = 0, 0, 0, 0&amp;#10;correct, outcome = 0, 0&amp;#10;&amp;#10;if slider_moved and not submit_resp.keys == None and 'up' in submit_resp.keys:&amp;#10;    &amp;#10;    if (slider.markerPos &gt;= div_pos and target_pos &gt;= div_pos)\&amp;#10;    or (slider.markerPos &lt;= div_pos and target_pos &lt;= div_pos):&amp;#10;        &amp;#10;        correct = 1&amp;#10;        outcome = 2 if valence == 'rew' else 1&amp;#10;        if outcome == 2:&amp;#10;            coinLR = 1&amp;#10;        elif outcome == 1:&amp;#10;            coinM = 1&amp;#10;            &amp;#10;    else:&amp;#10;        &amp;#10;        correct = 0&amp;#10;        outcome = -1 if valence == 'rew' else -2&amp;#10;        if outcome == -2:&amp;#10;            coinLR, crossLR = 1, 1&amp;#10;        elif outcome == -1:&amp;#10;            coinM, crossM = 1, 1   &amp;#10;    &amp;#10;    block_outcome += outcome&amp;#10;    bonus = 1 - (target_pos - slider.markerPos)**2&amp;#10;    if correct:&amp;#10;        block_bonus += bonus&amp;#10;    &amp;#10;elif not slider_moved:&amp;#10;    no_resp_txt = 'You must move the slider!'&amp;#10;    &amp;#10;else:&amp;#10;    no_resp_txt = 'Respond faster!'&amp;#10;    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;valence&quot;, valence);&amp;#10;psychoJS.experiment.addData(&quot;correct&quot;, correct);&amp;#10;psychoJS.experiment.addData(&quot;outcome&quot;, outcome);&amp;#10;psychoJS.experiment.addData(&quot;trial_key&quot;, trial_key);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData('valence', valence)&amp;#10;thisExp.addData('correct', correct)&amp;#10;thisExp.addData('outcome', outcome)&amp;#10;thisExp.addData('trial_key', trial_key)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="fb_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="no_resp_text" plugin="None">
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="no_resp_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0,0" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$no_resp_txt" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="Lcoin" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="input_data/coin.png" valType="file" updates="set during: delay.ISI2" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Lcoin" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="-.2, 0" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val=".3,.3" valType="list" updates="constant" name="size"/>
        <Param val="0" valType="code" updates="None" name="startEstim"/>
        <Param val="condition" valType="str" updates="None" name="startType"/>
        <Param val="$coinLR" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="Rcoin" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="input_data/coin.png" valType="file" updates="set during: delay.ISI2" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Rcoin" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val=".2, 0" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val=".3,.3" valType="list" updates="constant" name="size"/>
        <Param val="0" valType="code" updates="None" name="startEstim"/>
        <Param val="condition" valType="str" updates="None" name="startType"/>
        <Param val="$coinLR" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="Mcoin" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="input_data/coin.png" valType="file" updates="set during: delay.ISI2" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Mcoin" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val=".3,.3" valType="list" updates="constant" name="size"/>
        <Param val="0" valType="code" updates="None" name="startEstim"/>
        <Param val="condition" valType="str" updates="None" name="startType"/>
        <Param val="$coinM" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="Lcross" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="input_data/cross.png" valType="file" updates="set during: delay.ISI2" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Lcross" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="-.2, 0" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val=".3,.3" valType="list" updates="constant" name="size"/>
        <Param val="0" valType="code" updates="None" name="startEstim"/>
        <Param val="condition" valType="str" updates="None" name="startType"/>
        <Param val="crossLR" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="Rcross" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="input_data/cross.png" valType="file" updates="set during: delay.ISI2" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Rcross" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val=".2, 0" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val=".3,.3" valType="list" updates="constant" name="size"/>
        <Param val="0" valType="code" updates="None" name="startEstim"/>
        <Param val="condition" valType="str" updates="None" name="startType"/>
        <Param val="crossLR" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="Mcross" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="input_data/cross.png" valType="file" updates="set during: delay.ISI2" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Mcross" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val=".3,.3" valType="list" updates="constant" name="size"/>
        <Param val="0" valType="code" updates="None" name="startEstim"/>
        <Param val="condition" valType="str" updates="None" name="startType"/>
        <Param val="$crossM" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="end_block">
      <RoutineSettingsComponent name="end_block" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="end_block" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="block_end_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="txt1 = `You gained ${block_outcome} BIG coins,&amp;#10;and a bonus of ${Number.parseInt(np.ceil(block_bonus))} for precision and speed!&amp;#10;`&amp;#10;;&amp;#10;txt2 = &quot;Please continue to maximize your coins, precision, and speed.\n\n&quot;;&amp;#10;txt3 = &quot;Press up arrow to begin next block&quot;;&amp;#10;block_end_txt = ((txt1 + txt2) + txt3);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="txt1 = f'You gained {block_outcome} BIG coins,\nand a bonus of {int(np.ceil(block_bonus))} for precision and speed!\n\n'&amp;#10;txt2 = 'Please continue to maximize your coins, precision, and speed.\n\n'&amp;#10;txt3 = 'Press up arrow to begin next block'&amp;#10;&amp;#10;block_end_txt = txt1 + txt2 + txt3" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;block_outcome&quot;, block_outcome);&amp;#10;psychoJS.experiment.addData(&quot;block_bonus&quot;, block_bonus);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData('block_outcome', block_outcome)&amp;#10;thisExp.addData('block_bonus', block_bonus)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="block_end_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="block_end_text" plugin="None">
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="block_end_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$block_end_txt" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="block_end_resp" plugin="None">
        <Param val="'up'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="block_end_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Q1">
      <RoutineSettingsComponent name="Q1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Q1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Q1_text" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Q1_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Did you notice that one shape *gave* you more coins that the other?&amp;#10;Press Left for Yes, and Right for No." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="Q1_resp" plugin="None">
        <Param val="'left','right'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Q1_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Q2">
      <RoutineSettingsComponent name="Q2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Q2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Q2_text" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Q2_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Did you notice that one shape *cost* you more coins that the other?&amp;#10;Press Left for Yes, and Right for No." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="Q2_resp" plugin="None">
        <Param val="'left','right'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Q2_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Q3">
      <RoutineSettingsComponent name="Q3" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Q3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Q3_text" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Q3_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="The vertical line sometimes squished the space around the curvier shapes, and sometimes around the flatter shapes. Did you find one easier than the other?&amp;#10;Press Left for Curvy and Right for Flat." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="Q3_resp" plugin="None">
        <Param val="'left','right'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Q3_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="frame N" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="delay2">
      <RoutineSettingsComponent name="delay2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="delay2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val=".2" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <StaticComponent name="ISI" plugin="None">
        <Param val="" valType="code" updates="None" name="code"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="ISI" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val=".2" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
      </StaticComponent>
    </Routine>
  </Routines>
  <Flow>
    <LoopInitiator loopType="TrialHandler" name="blocks">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('blockN', 1)]), OrderedDict([('blockN', 2)]), OrderedDict([('blockN', 3)]), OrderedDict([('blockN', 4)]), OrderedDict([('blockN', 5)]), OrderedDict([('blockN', 6)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$sess_type_file" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="blocks" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="new_block"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="$trial_rows" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 0), ('stim_file_pos', 0.1), ('stim_pos', -0.38), ('noise_pos', 0), ('anchor', -0.089069535), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', -0.38), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 1), ('stim_file_pos', 0.1), ('stim_pos', -0.38), ('noise_pos', 0), ('anchor', 0.088461492), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', 0.38), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 2), ('stim_file_pos', 0.3), ('stim_pos', -0.34), ('noise_pos', 0), ('anchor', -0.05849196), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', -0.34), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 3), ('stim_file_pos', 0.3), ('stim_pos', -0.34), ('noise_pos', 0), ('anchor', 0.013412751), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', 0.34), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 4), ('stim_file_pos', 0.5), ('stim_pos', -0.3), ('noise_pos', 0), ('anchor', -0.238763139), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', -0.3), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 5), ('stim_file_pos', 0.5), ('stim_pos', -0.3), ('noise_pos', 0), ('anchor', 0.078617355), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', 0.3), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 6), ('stim_file_pos', 0.7), ('stim_pos', -0.26), ('noise_pos', 0), ('anchor', -0.297170515), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', -0.26), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 7), ('stim_file_pos', 0.7), ('stim_pos', -0.26), ('noise_pos', 0), ('anchor', 0.00973929), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', 0.26), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 8), ('stim_file_pos', 0.9), ('stim_pos', -0.22), ('noise_pos', 0), ('anchor', -0.057293657), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', -0.22), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 9), ('stim_file_pos', 0.9), ('stim_pos', -0.22), ('noise_pos', 0), ('anchor', 0.341682043), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', 0.22), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 10), ('stim_file_pos', 1.1), ('stim_pos', -0.18), ('noise_pos', 0), ('anchor', -0.153455753), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', -0.18), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 11), ('stim_file_pos', 1.1), ('stim_pos', -0.18), ('noise_pos', 0), ('anchor', 0.282573784), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', 0.18), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 12), ('stim_file_pos', 1.3), ('stim_pos', -0.14), ('noise_pos', 0), ('anchor', -0.26561076), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', -0.14), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 13), ('stim_file_pos', 1.3), ('stim_pos', -0.14), ('noise_pos', 0), ('anchor', 0.229898637), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', 0.14), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 14), ('stim_file_pos', 1.5), ('stim_pos', -0.1), ('noise_pos', 0), ('anchor', -0.274089709), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', -0.1), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 15), ('stim_file_pos', 1.5), ('stim_pos', -0.1), ('noise_pos', 0), ('anchor', 0.263973498), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', 0.1), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 16), ('stim_file_pos', 1.7), ('stim_pos', -0.06), ('noise_pos', 0), ('anchor', -0.331597377), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', -0.06), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 17), ('stim_file_pos', 1.7), ('stim_pos', -0.06), ('noise_pos', 0), ('anchor', 0.385094824), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', 0.06), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 18), ('stim_file_pos', 1.9), ('stim_pos', -0.02), ('noise_pos', 0), ('anchor', -0.002802649), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', -0.02), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 19), ('stim_file_pos', 1.9), ('stim_pos', -0.02), ('noise_pos', 0), ('anchor', 0.260871767), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', 0.02), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 20), ('stim_file_pos', 2.1), ('stim_pos', 0.02), ('noise_pos', 4), ('anchor', 0.320049747), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', 0.02), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 21), ('stim_file_pos', 2.1), ('stim_pos', 0.02), ('noise_pos', 4), ('anchor', -0.072865506), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', -0.02), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 22), ('stim_file_pos', 2.3), ('stim_pos', 0.06), ('noise_pos', 4), ('anchor', 0.21930202), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', 0.06), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 23), ('stim_file_pos', 2.3), ('stim_pos', 0.06), ('noise_pos', 4), ('anchor', -0.129979575), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', -0.06), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 24), ('stim_file_pos', 2.5), ('stim_pos', 0.1), ('noise_pos', 4), ('anchor', 0.215388506), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', 0.1), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 25), ('stim_file_pos', 2.5), ('stim_pos', 0.1), ('noise_pos', 4), ('anchor', -0.160021924), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', -0.1), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 26), ('stim_file_pos', 2.7), ('stim_pos', 0.14), ('noise_pos', 4), ('anchor', 0.322178763), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', 0.14), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 27), ('stim_file_pos', 2.7), ('stim_pos', 0.14), ('noise_pos', 4), ('anchor', -0.058876538), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', -0.14), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 28), ('stim_file_pos', 2.9), ('stim_pos', 0.18), ('noise_pos', 4), ('anchor', 0.384518339), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', 0.18), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 29), ('stim_file_pos', 2.9), ('stim_pos', 0.18), ('noise_pos', 4), ('anchor', -0.007462643), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', -0.18), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 30), ('stim_file_pos', 3.1), ('stim_pos', 0.22), ('noise_pos', 4), ('anchor', 0.290978108), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', 0.22), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 31), ('stim_file_pos', 3.1), ('stim_pos', 0.22), ('noise_pos', 4), ('anchor', -0.059630919), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', -0.22), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 32), ('stim_file_pos', 3.3), ('stim_pos', 0.26), ('noise_pos', 4), ('anchor', 0.35223911), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', 0.26), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 33), ('stim_file_pos', 3.3), ('stim_pos', 0.26), ('noise_pos', 4), ('anchor', -0.236268125), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', -0.26), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 34), ('stim_file_pos', 3.5), ('stim_pos', 0.3), ('noise_pos', 4), ('anchor', 0.08755545), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', 0.3), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 35), ('stim_file_pos', 3.5), ('stim_pos', 0.3), ('noise_pos', 4), ('anchor', -0.356621645), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', -0.3), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 36), ('stim_file_pos', 3.7), ('stim_pos', 0.34), ('noise_pos', 4), ('anchor', 0.029493775), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', 0.34), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 37), ('stim_file_pos', 3.7), ('stim_pos', 0.34), ('noise_pos', 4), ('anchor', -0.213717562), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', -0.34), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 38), ('stim_file_pos', 3.9), ('stim_pos', 0.38), ('noise_pos', 4), ('anchor', 0.100307621), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', 0.38), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 1), ('run', 1), ('condition', 'baseline'), ('trial_key', 39), ('stim_file_pos', 3.9), ('stim_pos', 0.38), ('noise_pos', 4), ('anchor', -0.156455809), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', -0.38), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 40), ('stim_file_pos', 0.1), ('stim_pos', -0.38), ('noise_pos', 0), ('anchor', -0.365333321), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.38), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 41), ('stim_file_pos', 0.1), ('stim_pos', -0.38), ('noise_pos', 0), ('anchor', -0.004130717), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.38), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 42), ('stim_file_pos', 0.1), ('stim_pos', -0.38), ('noise_pos', 0), ('anchor', -0.221428276), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.38), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 43), ('stim_file_pos', 0.1), ('stim_pos', -0.38), ('noise_pos', 0), ('anchor', -0.167821809), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.38), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 44), ('stim_file_pos', 0.3), ('stim_pos', -0.34), ('noise_pos', 0), ('anchor', -0.258515694), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.34), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 45), ('stim_file_pos', 0.3), ('stim_pos', -0.34), ('noise_pos', 0), ('anchor', 0.079824116), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.34), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 46), ('stim_file_pos', 0.3), ('stim_pos', -0.34), ('noise_pos', 0), ('anchor', -0.20228809), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.34), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 47), ('stim_file_pos', 0.3), ('stim_pos', -0.34), ('noise_pos', 0), ('anchor', 0.155534782), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.34), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 48), ('stim_file_pos', 0.5), ('stim_pos', -0.3), ('noise_pos', 0), ('anchor', -0.320683768), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.3), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 49), ('stim_file_pos', 0.5), ('stim_pos', -0.3), ('noise_pos', 0), ('anchor', -0.180765598), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.3), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 50), ('stim_file_pos', 0.5), ('stim_pos', -0.3), ('noise_pos', 0), ('anchor', -0.366626057), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.3), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 51), ('stim_file_pos', 0.5), ('stim_pos', -0.3), ('noise_pos', 0), ('anchor', 0.062014162), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.3), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 52), ('stim_file_pos', 0.7), ('stim_pos', -0.26), ('noise_pos', 0), ('anchor', -0.34438855), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.26), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 53), ('stim_file_pos', 0.7), ('stim_pos', -0.26), ('noise_pos', 0), ('anchor', 0.030943931), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.26), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 54), ('stim_file_pos', 0.7), ('stim_pos', -0.26), ('noise_pos', 0), ('anchor', -0.288534162), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.26), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 55), ('stim_file_pos', 0.7), ('stim_pos', -0.26), ('noise_pos', 0), ('anchor', -0.080579434), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.26), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 56), ('stim_file_pos', 0.9), ('stim_pos', -0.22), ('noise_pos', 0), ('anchor', -0.321877016), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.22), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 57), ('stim_file_pos', 0.9), ('stim_pos', -0.22), ('noise_pos', 0), ('anchor', 0.014405106), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.22), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 58), ('stim_file_pos', 0.9), ('stim_pos', -0.22), ('noise_pos', 0), ('anchor', -0.258763007), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.22), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 59), ('stim_file_pos', 0.9), ('stim_pos', -0.22), ('noise_pos', 0), ('anchor', 0.270925508), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.22), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 60), ('stim_file_pos', 1.1), ('stim_pos', -0.18), ('noise_pos', 4), ('anchor', 0.300056267), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.18), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_1.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 61), ('stim_file_pos', 1.1), ('stim_pos', -0.18), ('noise_pos', 4), ('anchor', -0.316226149), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.18), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_1.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 62), ('stim_file_pos', 1.3), ('stim_pos', -0.14), ('noise_pos', 4), ('anchor', 0.22318906), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.14), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_1.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 63), ('stim_file_pos', 1.3), ('stim_pos', -0.14), ('noise_pos', 4), ('anchor', -0.301767805), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.14), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_1.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 64), ('stim_file_pos', 1.5), ('stim_pos', -0.1), ('noise_pos', 4), ('anchor', 0.302290248), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.1), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_1.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 65), ('stim_file_pos', 1.5), ('stim_pos', -0.1), ('noise_pos', 4), ('anchor', -0.321144676), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.1), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_1.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 66), ('stim_file_pos', 1.7), ('stim_pos', -0.06), ('noise_pos', 4), ('anchor', 0.077579792), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.06), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_1.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 67), ('stim_file_pos', 1.7), ('stim_pos', -0.06), ('noise_pos', 4), ('anchor', -0.35144666), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.06), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_1.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 68), ('stim_file_pos', 1.9), ('stim_pos', -0.02), ('noise_pos', 4), ('anchor', -0.109844221), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.02), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_1.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 69), ('stim_file_pos', 1.9), ('stim_pos', -0.02), ('noise_pos', 4), ('anchor', -0.396360477), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.02), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_1.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 70), ('stim_file_pos', 2.1), ('stim_pos', 0.02), ('noise_pos', 4), ('anchor', 0.363445416), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', 0.02), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 71), ('stim_file_pos', 2.1), ('stim_pos', 0.02), ('noise_pos', 4), ('anchor', -0.362927552), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', -0.02), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 72), ('stim_file_pos', 2.3), ('stim_pos', 0.06), ('noise_pos', 4), ('anchor', 0.222457951), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', 0.06), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 73), ('stim_file_pos', 2.3), ('stim_pos', 0.06), ('noise_pos', 4), ('anchor', -0.224316971), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', -0.06), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 74), ('stim_file_pos', 2.5), ('stim_pos', 0.1), ('noise_pos', 4), ('anchor', 0.199101478), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', 0.1), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 75), ('stim_file_pos', 2.5), ('stim_pos', 0.1), ('noise_pos', 4), ('anchor', -0.321025036), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', -0.1), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 76), ('stim_file_pos', 2.7), ('stim_pos', 0.14), ('noise_pos', 4), ('anchor', 0.367625597), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', 0.14), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 77), ('stim_file_pos', 2.7), ('stim_pos', 0.14), ('noise_pos', 4), ('anchor', -0.241418881), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', -0.14), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 78), ('stim_file_pos', 2.9), ('stim_pos', 0.18), ('noise_pos', 4), ('anchor', 0.25472874), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', 0.18), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 2), ('run', 1), ('condition', 'pen_comp'), ('trial_key', 79), ('stim_file_pos', 2.9), ('stim_pos', 0.18), ('noise_pos', 4), ('anchor', -0.373643317), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', -0.18), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 80), ('stim_file_pos', 1.1), ('stim_pos', -0.18), ('noise_pos', 0), ('anchor', -0.133574204), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', -0.18), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 81), ('stim_file_pos', 1.1), ('stim_pos', -0.18), ('noise_pos', 0), ('anchor', 0.399326414), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', 0.18), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 82), ('stim_file_pos', 1.3), ('stim_pos', -0.14), ('noise_pos', 0), ('anchor', -0.247865427), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', -0.14), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 83), ('stim_file_pos', 1.3), ('stim_pos', -0.14), ('noise_pos', 0), ('anchor', 0.377487996), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', 0.14), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 84), ('stim_file_pos', 1.5), ('stim_pos', -0.1), ('noise_pos', 0), ('anchor', 0.062239268), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', -0.1), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 85), ('stim_file_pos', 1.5), ('stim_pos', -0.1), ('noise_pos', 0), ('anchor', 0.275702125), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', 0.1), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 86), ('stim_file_pos', 1.7), ('stim_pos', -0.06), ('noise_pos', 0), ('anchor', -0.322294832), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', -0.06), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 87), ('stim_file_pos', 1.7), ('stim_pos', -0.06), ('noise_pos', 0), ('anchor', 0.345733008), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', 0.06), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 88), ('stim_file_pos', 1.9), ('stim_pos', -0.02), ('noise_pos', 0), ('anchor', -0.091828991), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', -0.02), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 89), ('stim_file_pos', 1.9), ('stim_pos', -0.02), ('noise_pos', 0), ('anchor', 0.342509539), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', 0.02), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 90), ('stim_file_pos', 2.1), ('stim_pos', 0.02), ('noise_pos', 0), ('anchor', -0.003517701), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.02), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_2.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 91), ('stim_file_pos', 2.1), ('stim_pos', 0.02), ('noise_pos', 0), ('anchor', 0.265356111), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.02), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_2.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 92), ('stim_file_pos', 2.3), ('stim_pos', 0.06), ('noise_pos', 0), ('anchor', -0.01708925), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.06), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_2.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 93), ('stim_file_pos', 2.3), ('stim_pos', 0.06), ('noise_pos', 0), ('anchor', 0.293856361), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.06), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_2.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 94), ('stim_file_pos', 2.5), ('stim_pos', 0.1), ('noise_pos', 0), ('anchor', -0.285186753), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.1), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_2.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 95), ('stim_file_pos', 2.5), ('stim_pos', 0.1), ('noise_pos', 0), ('anchor', 0.335014003), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.1), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_2.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 96), ('stim_file_pos', 2.7), ('stim_pos', 0.14), ('noise_pos', 0), ('anchor', 0.070408106), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.14), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_2.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 97), ('stim_file_pos', 2.7), ('stim_pos', 0.14), ('noise_pos', 0), ('anchor', 0.398633999), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.14), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_2.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 98), ('stim_file_pos', 2.9), ('stim_pos', 0.18), ('noise_pos', 0), ('anchor', 0.10219082), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.18), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_2.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 99), ('stim_file_pos', 2.9), ('stim_pos', 0.18), ('noise_pos', 0), ('anchor', 0.226850293), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.18), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_2.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 100), ('stim_file_pos', 3.1), ('stim_pos', 0.22), ('noise_pos', 4), ('anchor', 0.393316488), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.22), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 101), ('stim_file_pos', 3.1), ('stim_pos', 0.22), ('noise_pos', 4), ('anchor', -0.340492794), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.22), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 102), ('stim_file_pos', 3.1), ('stim_pos', 0.22), ('noise_pos', 4), ('anchor', 0.383357699), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.22), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 103), ('stim_file_pos', 3.1), ('stim_pos', 0.22), ('noise_pos', 4), ('anchor', -0.341477413), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.22), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 104), ('stim_file_pos', 3.3), ('stim_pos', 0.26), ('noise_pos', 4), ('anchor', 0.20435935), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.26), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 105), ('stim_file_pos', 3.3), ('stim_pos', 0.26), ('noise_pos', 4), ('anchor', -0.367266033), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.26), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 106), ('stim_file_pos', 3.3), ('stim_pos', 0.26), ('noise_pos', 4), ('anchor', 0.312605624), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.26), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 107), ('stim_file_pos', 3.3), ('stim_pos', 0.26), ('noise_pos', 4), ('anchor', 0.105576172), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.26), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 108), ('stim_file_pos', 3.5), ('stim_pos', 0.3), ('noise_pos', 4), ('anchor', 0.382090384), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.3), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 109), ('stim_file_pos', 3.5), ('stim_pos', 0.3), ('noise_pos', 4), ('anchor', -0.24433399), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.3), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 110), ('stim_file_pos', 3.5), ('stim_pos', 0.3), ('noise_pos', 4), ('anchor', 0.207124251), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.3), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 111), ('stim_file_pos', 3.5), ('stim_pos', 0.3), ('noise_pos', 4), ('anchor', 0.085500088), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.3), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 112), ('stim_file_pos', 3.7), ('stim_pos', 0.34), ('noise_pos', 4), ('anchor', 0.247946853), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.34), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 113), ('stim_file_pos', 3.7), ('stim_pos', 0.34), ('noise_pos', 4), ('anchor', -0.140349505), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.34), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 114), ('stim_file_pos', 3.7), ('stim_pos', 0.34), ('noise_pos', 4), ('anchor', 0.205795629), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.34), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 115), ('stim_file_pos', 3.7), ('stim_pos', 0.34), ('noise_pos', 4), ('anchor', -0.370207552), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.34), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 116), ('stim_file_pos', 3.9), ('stim_pos', 0.38), ('noise_pos', 4), ('anchor', 0.220445536), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.38), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 117), ('stim_file_pos', 3.9), ('stim_pos', 0.38), ('noise_pos', 4), ('anchor', -0.119230261), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.38), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 118), ('stim_file_pos', 3.9), ('stim_pos', 0.38), ('noise_pos', 4), ('anchor', 0.277213221), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.38), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 3), ('run', 1), ('condition', 'rew_comp'), ('trial_key', 119), ('stim_file_pos', 3.9), ('stim_pos', 0.38), ('noise_pos', 4), ('anchor', -0.336533157), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.38), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 120), ('stim_file_pos', 0.1), ('stim_pos', -0.38), ('noise_pos', 4), ('anchor', -0.001882283), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', -0.38), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 121), ('stim_file_pos', 0.1), ('stim_pos', -0.38), ('noise_pos', 4), ('anchor', 0.068302489), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', 0.38), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 122), ('stim_file_pos', 0.3), ('stim_pos', -0.34), ('noise_pos', 4), ('anchor', -0.249594815), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', -0.34), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 123), ('stim_file_pos', 0.3), ('stim_pos', -0.34), ('noise_pos', 4), ('anchor', 0.131513514), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', 0.34), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 124), ('stim_file_pos', 0.5), ('stim_pos', -0.3), ('noise_pos', 4), ('anchor', -0.027986813), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', -0.3), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 125), ('stim_file_pos', 0.5), ('stim_pos', -0.3), ('noise_pos', 4), ('anchor', 0.399134916), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', 0.3), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 126), ('stim_file_pos', 0.7), ('stim_pos', -0.26), ('noise_pos', 4), ('anchor', -0.105283018), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', -0.26), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 127), ('stim_file_pos', 0.7), ('stim_pos', -0.26), ('noise_pos', 4), ('anchor', 0.197059334), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', 0.26), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 128), ('stim_file_pos', 0.9), ('stim_pos', -0.22), ('noise_pos', 4), ('anchor', -0.156021434), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', -0.22), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 129), ('stim_file_pos', 0.9), ('stim_pos', -0.22), ('noise_pos', 4), ('anchor', 0.132829423), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', 0.22), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 130), ('stim_file_pos', 1.1), ('stim_pos', -0.18), ('noise_pos', 4), ('anchor', -0.243904272), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', -0.18), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 131), ('stim_file_pos', 1.1), ('stim_pos', -0.18), ('noise_pos', 4), ('anchor', 0.236527004), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', 0.18), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 132), ('stim_file_pos', 1.3), ('stim_pos', -0.14), ('noise_pos', 4), ('anchor', -0.118922015), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', -0.14), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 133), ('stim_file_pos', 1.3), ('stim_pos', -0.14), ('noise_pos', 4), ('anchor', 0.028370475), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', 0.14), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 134), ('stim_file_pos', 1.5), ('stim_pos', -0.1), ('noise_pos', 4), ('anchor', -0.174502865), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', -0.1), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 135), ('stim_file_pos', 1.5), ('stim_pos', -0.1), ('noise_pos', 4), ('anchor', 0.323455729), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', 0.1), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 136), ('stim_file_pos', 1.7), ('stim_pos', -0.06), ('noise_pos', 4), ('anchor', -0.328119258), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', -0.06), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 137), ('stim_file_pos', 1.7), ('stim_pos', -0.06), ('noise_pos', 4), ('anchor', 0.351070259), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', 0.06), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 138), ('stim_file_pos', 1.9), ('stim_pos', -0.02), ('noise_pos', 4), ('anchor', -0.103101242), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', -0.02), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 139), ('stim_file_pos', 1.9), ('stim_pos', -0.02), ('noise_pos', 4), ('anchor', 0.329981501), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', 0.02), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 140), ('stim_file_pos', 2.1), ('stim_pos', 0.02), ('noise_pos', 0), ('anchor', 0.108757496), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', 0.02), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 141), ('stim_file_pos', 2.1), ('stim_pos', 0.02), ('noise_pos', 0), ('anchor', -0.168998689), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', -0.02), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 142), ('stim_file_pos', 2.3), ('stim_pos', 0.06), ('noise_pos', 0), ('anchor', 0.214597545), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', 0.06), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 143), ('stim_file_pos', 2.3), ('stim_pos', 0.06), ('noise_pos', 0), ('anchor', -0.293364138), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', -0.06), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 144), ('stim_file_pos', 2.5), ('stim_pos', 0.1), ('noise_pos', 0), ('anchor', 0.227849437), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', 0.1), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 145), ('stim_file_pos', 2.5), ('stim_pos', 0.1), ('noise_pos', 0), ('anchor', -0.308845479), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', -0.1), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 146), ('stim_file_pos', 2.7), ('stim_pos', 0.14), ('noise_pos', 0), ('anchor', 0.083407489), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', 0.14), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 147), ('stim_file_pos', 2.7), ('stim_pos', 0.14), ('noise_pos', 0), ('anchor', -0.220167556), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', -0.14), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 148), ('stim_file_pos', 2.9), ('stim_pos', 0.18), ('noise_pos', 0), ('anchor', 0.315483006), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', 0.18), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 149), ('stim_file_pos', 2.9), ('stim_pos', 0.18), ('noise_pos', 0), ('anchor', -0.357138841), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', -0.18), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 150), ('stim_file_pos', 3.1), ('stim_pos', 0.22), ('noise_pos', 0), ('anchor', 0.353559952), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', 0.22), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 151), ('stim_file_pos', 3.1), ('stim_pos', 0.22), ('noise_pos', 0), ('anchor', -0.026252635), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', -0.22), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 152), ('stim_file_pos', 3.3), ('stim_pos', 0.26), ('noise_pos', 0), ('anchor', 0.196354726), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', 0.26), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 153), ('stim_file_pos', 3.3), ('stim_pos', 0.26), ('noise_pos', 0), ('anchor', -0.062392356), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', -0.26), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 154), ('stim_file_pos', 3.5), ('stim_pos', 0.3), ('noise_pos', 0), ('anchor', 0.008802142), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', 0.3), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 155), ('stim_file_pos', 3.5), ('stim_pos', 0.3), ('noise_pos', 0), ('anchor', -0.054620684), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', -0.3), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 156), ('stim_file_pos', 3.7), ('stim_pos', 0.34), ('noise_pos', 0), ('anchor', 0.231975348), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', 0.34), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 157), ('stim_file_pos', 3.7), ('stim_pos', 0.34), ('noise_pos', 0), ('anchor', -0.107191945), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', -0.34), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 158), ('stim_file_pos', 3.9), ('stim_pos', 0.38), ('noise_pos', 0), ('anchor', 0.296102736), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.0), ('target_pos', 0.38), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 4), ('run', 2), ('condition', 'baseline'), ('trial_key', 159), ('stim_file_pos', 3.9), ('stim_pos', 0.38), ('noise_pos', 0), ('anchor', -0.032483903), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.0), ('target_pos', -0.38), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 160), ('stim_file_pos', 0.1), ('stim_pos', -0.38), ('noise_pos', 4), ('anchor', -0.275605392), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.38), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 161), ('stim_file_pos', 0.1), ('stim_pos', -0.38), ('noise_pos', 4), ('anchor', -0.177332123), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.38), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 162), ('stim_file_pos', 0.1), ('stim_pos', -0.38), ('noise_pos', 4), ('anchor', -0.289982507), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.38), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 163), ('stim_file_pos', 0.1), ('stim_pos', -0.38), ('noise_pos', 4), ('anchor', 0.071365465), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.38), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 164), ('stim_file_pos', 0.3), ('stim_pos', -0.34), ('noise_pos', 4), ('anchor', -0.364919587), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.34), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 165), ('stim_file_pos', 0.3), ('stim_pos', -0.34), ('noise_pos', 4), ('anchor', 0.213918947), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.34), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 166), ('stim_file_pos', 0.3), ('stim_pos', -0.34), ('noise_pos', 4), ('anchor', -0.297938508), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.34), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 167), ('stim_file_pos', 0.3), ('stim_pos', -0.34), ('noise_pos', 4), ('anchor', -0.075766808), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.34), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 168), ('stim_file_pos', 0.5), ('stim_pos', -0.3), ('noise_pos', 4), ('anchor', -0.252016411), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.3), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 169), ('stim_file_pos', 0.5), ('stim_pos', -0.3), ('noise_pos', 4), ('anchor', 0.091351207), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.3), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 170), ('stim_file_pos', 0.5), ('stim_pos', -0.3), ('noise_pos', 4), ('anchor', -0.289205446), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.3), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 171), ('stim_file_pos', 0.5), ('stim_pos', -0.3), ('noise_pos', 4), ('anchor', 0.068652066), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.3), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 172), ('stim_file_pos', 0.7), ('stim_pos', -0.26), ('noise_pos', 4), ('anchor', -0.397579099), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.26), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 173), ('stim_file_pos', 0.7), ('stim_pos', -0.26), ('noise_pos', 4), ('anchor', 0.133671584), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.26), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 174), ('stim_file_pos', 0.7), ('stim_pos', -0.26), ('noise_pos', 4), ('anchor', -0.227904367), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.26), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 175), ('stim_file_pos', 0.7), ('stim_pos', -0.26), ('noise_pos', 4), ('anchor', 0.373882235), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.26), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 176), ('stim_file_pos', 0.9), ('stim_pos', -0.22), ('noise_pos', 4), ('anchor', -0.364617277), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.22), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 177), ('stim_file_pos', 0.9), ('stim_pos', -0.22), ('noise_pos', 4), ('anchor', 0.001229208), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.22), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 178), ('stim_file_pos', 0.9), ('stim_pos', -0.22), ('noise_pos', 4), ('anchor', -0.23298359), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.22), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 179), ('stim_file_pos', 0.9), ('stim_pos', -0.22), ('noise_pos', 4), ('anchor', 0.350171162), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.22), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_0.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 180), ('stim_file_pos', 1.1), ('stim_pos', -0.18), ('noise_pos', 0), ('anchor', -0.05988158), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.18), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_1.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 181), ('stim_file_pos', 1.1), ('stim_pos', -0.18), ('noise_pos', 0), ('anchor', -0.326650578), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.18), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_1.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 182), ('stim_file_pos', 1.3), ('stim_pos', -0.14), ('noise_pos', 0), ('anchor', 0.18597747), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.14), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_1.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 183), ('stim_file_pos', 1.3), ('stim_pos', -0.14), ('noise_pos', 0), ('anchor', -0.388413709), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.14), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_1.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 184), ('stim_file_pos', 1.5), ('stim_pos', -0.1), ('noise_pos', 0), ('anchor', 0.311128419), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.1), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_1.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 185), ('stim_file_pos', 1.5), ('stim_pos', -0.1), ('noise_pos', 0), ('anchor', -0.338490364), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.1), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_1.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 186), ('stim_file_pos', 1.7), ('stim_pos', -0.06), ('noise_pos', 0), ('anchor', 0.286835748), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.06), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_1.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 187), ('stim_file_pos', 1.7), ('stim_pos', -0.06), ('noise_pos', 0), ('anchor', -0.226167102), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.06), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_1.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 188), ('stim_file_pos', 1.9), ('stim_pos', -0.02), ('noise_pos', 0), ('anchor', 0.185206452), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', -0.02), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_1.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 189), ('stim_file_pos', 1.9), ('stim_pos', -0.02), ('noise_pos', 0), ('anchor', -0.395951873), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', 0.02), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_1.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 190), ('stim_file_pos', 2.1), ('stim_pos', 0.02), ('noise_pos', 0), ('anchor', 0.390529184), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', 0.02), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 191), ('stim_file_pos', 2.1), ('stim_pos', 0.02), ('noise_pos', 0), ('anchor', -0.249861553), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', -0.02), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 192), ('stim_file_pos', 2.3), ('stim_pos', 0.06), ('noise_pos', 0), ('anchor', 0.259689714), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', 0.06), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 193), ('stim_file_pos', 2.3), ('stim_pos', 0.06), ('noise_pos', 0), ('anchor', -0.376412365), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', -0.06), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 194), ('stim_file_pos', 2.5), ('stim_pos', 0.1), ('noise_pos', 0), ('anchor', 0.045441032), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', 0.1), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 195), ('stim_file_pos', 2.5), ('stim_pos', 0.1), ('noise_pos', 0), ('anchor', -0.297787277), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', -0.1), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 196), ('stim_file_pos', 2.7), ('stim_pos', 0.14), ('noise_pos', 0), ('anchor', -0.009414836), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', 0.14), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 197), ('stim_file_pos', 2.7), ('stim_pos', 0.14), ('noise_pos', 0), ('anchor', -0.308494783), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', -0.14), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 198), ('stim_file_pos', 2.9), ('stim_pos', 0.18), ('noise_pos', 0), ('anchor', 0.129896888), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', -0.2), ('target_pos', 0.18), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 5), ('run', 2), ('condition', 'pen_comp'), ('trial_key', 199), ('stim_file_pos', 2.9), ('stim_pos', 0.18), ('noise_pos', 0), ('anchor', -0.269104929), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', 0.2), ('target_pos', -0.18), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_2.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 200), ('stim_file_pos', 1.1), ('stim_pos', -0.18), ('noise_pos', 4), ('anchor', -0.251474292), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', -0.18), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 201), ('stim_file_pos', 1.1), ('stim_pos', -0.18), ('noise_pos', 4), ('anchor', 0.271683164), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', 0.18), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 202), ('stim_file_pos', 1.3), ('stim_pos', -0.14), ('noise_pos', 4), ('anchor', 0.132224425), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', -0.14), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 203), ('stim_file_pos', 1.3), ('stim_pos', -0.14), ('noise_pos', 4), ('anchor', 0.345495153), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', 0.14), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 204), ('stim_file_pos', 1.5), ('stim_pos', -0.1), ('noise_pos', 4), ('anchor', -0.333027022), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', -0.1), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 205), ('stim_file_pos', 1.5), ('stim_pos', -0.1), ('noise_pos', 4), ('anchor', 0.327064973), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', 0.1), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 206), ('stim_file_pos', 1.7), ('stim_pos', -0.06), ('noise_pos', 4), ('anchor', -0.082854035), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', -0.06), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 207), ('stim_file_pos', 1.7), ('stim_pos', -0.06), ('noise_pos', 4), ('anchor', 0.380424555), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', 0.06), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 208), ('stim_file_pos', 1.9), ('stim_pos', -0.02), ('noise_pos', 4), ('anchor', 0.148557195), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', -0.02), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 209), ('stim_file_pos', 1.9), ('stim_pos', -0.02), ('noise_pos', 4), ('anchor', 0.399082775), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', 0.02), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_1.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 210), ('stim_file_pos', 2.1), ('stim_pos', 0.02), ('noise_pos', 4), ('anchor', -0.233772859), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.02), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_2.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 211), ('stim_file_pos', 2.1), ('stim_pos', 0.02), ('noise_pos', 4), ('anchor', 0.272213033), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.02), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_2.10_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 212), ('stim_file_pos', 2.3), ('stim_pos', 0.06), ('noise_pos', 4), ('anchor', -0.195942615), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.06), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_2.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 213), ('stim_file_pos', 2.3), ('stim_pos', 0.06), ('noise_pos', 4), ('anchor', 0.326063111), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.06), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_2.30_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 214), ('stim_file_pos', 2.5), ('stim_pos', 0.1), ('noise_pos', 4), ('anchor', -0.293251132), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.1), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_2.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 215), ('stim_file_pos', 2.5), ('stim_pos', 0.1), ('noise_pos', 4), ('anchor', 0.391021496), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.1), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_2.50_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 216), ('stim_file_pos', 2.7), ('stim_pos', 0.14), ('noise_pos', 4), ('anchor', -0.19196502), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.14), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_2.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 217), ('stim_file_pos', 2.7), ('stim_pos', 0.14), ('noise_pos', 4), ('anchor', 0.344179806), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.14), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_2.70_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 218), ('stim_file_pos', 2.9), ('stim_pos', 0.18), ('noise_pos', 4), ('anchor', 0.152693923), ('shape', 'curv'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.18), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_2.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_4.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 219), ('stim_file_pos', 2.9), ('stim_pos', 0.18), ('noise_pos', 4), ('anchor', 0.347006841), ('shape', 'curv'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.18), ('subj_C0F1_val', 'pen'), ('subj_C1F0_val', 'rew'), ('target_file', 'input_data/stims/Shape_2.90_4.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_4.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_4.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 220), ('stim_file_pos', 3.1), ('stim_pos', 0.22), ('noise_pos', 0), ('anchor', 0.332917668), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.22), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 221), ('stim_file_pos', 3.1), ('stim_pos', 0.22), ('noise_pos', 0), ('anchor', 0.06072831), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.22), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 222), ('stim_file_pos', 3.1), ('stim_pos', 0.22), ('noise_pos', 0), ('anchor', 0.380733912), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.22), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 223), ('stim_file_pos', 3.1), ('stim_pos', 0.22), ('noise_pos', 0), ('anchor', -0.030520182), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.22), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.10_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 224), ('stim_file_pos', 3.3), ('stim_pos', 0.26), ('noise_pos', 0), ('anchor', 0.317670814), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.26), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 225), ('stim_file_pos', 3.3), ('stim_pos', 0.26), ('noise_pos', 0), ('anchor', -0.136382757), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.26), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 226), ('stim_file_pos', 3.3), ('stim_pos', 0.26), ('noise_pos', 0), ('anchor', 0.359429947), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.26), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 227), ('stim_file_pos', 3.3), ('stim_pos', 0.26), ('noise_pos', 0), ('anchor', -0.339486885), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.26), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.30_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 228), ('stim_file_pos', 3.5), ('stim_pos', 0.3), ('noise_pos', 0), ('anchor', 0.399799269), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.3), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 229), ('stim_file_pos', 3.5), ('stim_pos', 0.3), ('noise_pos', 0), ('anchor', 0.16199426), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.3), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 230), ('stim_file_pos', 3.5), ('stim_pos', 0.3), ('noise_pos', 0), ('anchor', 0.205129072), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.3), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 231), ('stim_file_pos', 3.5), ('stim_pos', 0.3), ('noise_pos', 0), ('anchor', -0.015280515), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.3), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.50_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 232), ('stim_file_pos', 3.7), ('stim_pos', 0.34), ('noise_pos', 0), ('anchor', 0.246387445), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.34), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 233), ('stim_file_pos', 3.7), ('stim_pos', 0.34), ('noise_pos', 0), ('anchor', 0.079383465), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.34), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 234), ('stim_file_pos', 3.7), ('stim_pos', 0.34), ('noise_pos', 0), ('anchor', 0.289676282), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.34), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 235), ('stim_file_pos', 3.7), ('stim_pos', 0.34), ('noise_pos', 0), ('anchor', -0.166547483), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.34), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.70_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 236), ('stim_file_pos', 3.9), ('stim_pos', 0.38), ('noise_pos', 0), ('anchor', 0.249077269), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.38), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 237), ('stim_file_pos', 3.9), ('stim_pos', 0.38), ('noise_pos', 0), ('anchor', -0.135949745), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.38), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 238), ('stim_file_pos', 3.9), ('stim_pos', 0.38), ('noise_pos', 0), ('anchor', 0.287925186), ('shape', 'flat'), ('shape_order', 'curv_flat'), ('div_pos', 0.2), ('target_pos', 0.38), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_0.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_4.00_0.00.png')]), OrderedDict([('blockN', 6), ('run', 2), ('condition', 'rew_comp'), ('trial_key', 239), ('stim_file_pos', 3.9), ('stim_pos', 0.38), ('noise_pos', 0), ('anchor', 0.157467456), ('shape', 'flat'), ('shape_order', 'flat_curv'), ('div_pos', -0.2), ('target_pos', -0.38), ('subj_C0F1_val', 'rew'), ('subj_C1F0_val', 'pen'), ('target_file', 'input_data/stims/Shape_3.90_0.00.png'), ('img1_file', 'input_data/stims/Shape_4.00_0.00.png'), ('img2_file', 'input_data/stims/Shape_0.00_0.00.png')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="input_data/trials.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="baseline"/>
    <Routine name="stim"/>
    <Routine name="delay"/>
    <Routine name="task"/>
    <Routine name="delay2"/>
    <Routine name="feedback"/>
    <LoopTerminator name="trials"/>
    <Routine name="end_block"/>
    <LoopTerminator name="blocks"/>
    <Routine name="Q1"/>
    <Routine name="Q2"/>
    <Routine name="Q3"/>
  </Flow>
</PsychoPy2experiment>
